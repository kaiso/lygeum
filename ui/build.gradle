
apply plugin: 'base'

buildscript {
    project.ext.'nodeDir' = "${this.properties['projectDir']}/.node"
    ext.execPath = "$System.env.PATH" + System.getProperty("path.separator") + "/usr/local/bin/"
}

gradle.startParameter.taskRequests.each { tr -> 
    if ( tr instanceof org.gradle.internal.DefaultTaskExecutionRequest ) {
         println "task requests: $tr.args"
         ext.args = tr.args
    }
}


if (project.hasProperty('front.skip')) {
   println 'project tasks are skipped'
   project.tasks.all { task -> task.enabled = false }
}
        
clean.doFirst {
  println 'cleaning lygeum-ui project'
}

task removeDist(type:Delete) {
  delete 'dist'
}

clean.dependsOn removeDist

task installPackages(type:Exec) {
   doFirst {
	   println 'installing nodejs packages...'
	   println "node path: ${this.properties['nodeDir']}"
   }
   environment "PATH", execPath
   commandLine 'sh', '-c', 'npm install'
}

task runTests(type:Exec) {
   doFirst {
	   println 'launching ui tests...'
   }
   environment "PATH", execPath
   commandLine 'sh', '-c', 'npm run test'
}

task buildPackage(type:Exec) {
   doFirst {
	   println 'building the ui app...'
	   println "node path: ${this.properties['nodeDir']}"
   }
   environment "PATH", execPath
   commandLine 'sh', '-c', 'npm run build'
}

runTests.dependsOn installPackages
buildPackage.dependsOn runTests
build.dependsOn buildPackage
buildPackage.onlyIf{ ext.args.contains("build") || ext.args.contains("assemble") }


